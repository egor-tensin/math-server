name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Linting
    continue-on-error: ${{ github.ref != 'refs/heads/master' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Run clang-format
        run: ./cmake/tools/project-clang-format.py

  build:
    strategy:
      matrix:
        toolset: [gcc, vs2019, vs2022]
        platform: [x64, x86]
        configuration: [Debug, Release]
        include:
          - {toolset: gcc, os: ubuntu-latest}
          - {toolset: vs2019, os: windows-2019}
          - {toolset: vs2022, os: windows-2022}
        exclude:
          # 32-bit Linux builds, meh.
          - {toolset: gcc, platform: x86}
    runs-on: '${{ matrix.os }}'
    name: 'Build: ${{ matrix.toolset }} / ${{ matrix.platform }} / ${{ matrix.configuration }}'
    env:
      TOOLSET: '${{ matrix.toolset }}'
      PLATFORM: '${{ matrix.platform }}'
      CONFIGURATION: '${{ matrix.configuration }}'
      BOOST_VERSION: 1.81.0
      CMAKE_FLAGS: -D MATH_SERVER_TESTS=ON
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Cache Boost
        uses: actions/cache@v3
        with:
          path: '${{ runner.workspace }}/build/boost_*.tar.gz'
          key: 'boost_${{ env.BOOST_VERSION }}'
      - name: Build Boost
        run: make deps
      - name: Build
        run: make install
      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: 'math-server-${{ matrix.toolset }}-${{ matrix.platform }}-${{ matrix.configuration }}'
          path: '${{ runner.workspace }}/build/install/'
          if-no-files-found: error
      - name: Test
        run: make test

  publish:
    needs: [lint]
    strategy:
      matrix:
        project: [client, server]
    runs-on: ubuntu-latest
    name: 'Docker: publish math-${{ matrix.project }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: '${{ secrets.DOCKERHUB_USERNAME }}'
          password: '${{ secrets.DOCKERHUB_TOKEN }}'
      - id: platforms
        name: Which platforms?
        # Building for ARM for every commit not in master is too time-consuming.
        run: |
          if [ '${{ github.ref }}' = 'refs/heads/master' ]; then
              echo 'platforms=linux/amd64,linux/armhf' >> "$GITHUB_OUTPUT"
          else
              echo 'platforms=linux/amd64' >> "$GITHUB_OUTPUT"
          fi
      - name: 'Publish math-${{ matrix.project }}'
        uses: docker/build-push-action@v3
        with:
          # Without context, .dockerignore is not respected?
          # https://stackoverflow.com/a/74552407/514684
          context: .
          file: '${{ matrix.project }}/Dockerfile'
          platforms: '${{ steps.platforms.outputs.platforms }}'
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: '${{ secrets.DOCKERHUB_USERNAME }}/math-${{ matrix.project }}:latest'
